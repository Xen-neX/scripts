global
    log /dev/log local0
    log /dev/log local1 notice
    log 127.0.0.1 local0 debug
    chroot /var/lib/haproxy
    stats socket /var/run/haproxy.sock mode 660
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    option  tcplog
    timeout connect 5000ms
    timeout client  50000ms
    timeout server  50000ms

frontend tcp_front
    bind *:443
    mode tcp
    option tcplog


    # Разрешенные IP-адреса
    acl allowed_ip src 85.192.40.219 80.87.111.183 80.87.104.214 213.189.221.21 213.189.218.82 45.86.180.52 46.246.8.43 46.246.8.63 46.246.8.59 80.87.104.214 89.23.19.9 188.126.89.20 158.255.214.188

    # Блокируем соединение, если IP не входит в список разрешенных
    tcp-request connection reject if !allowed_ip

    # Отложенная проверка содержимого соединения (до 5 секунд)
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }

    # Захват значения req.ssl_sni
    tcp-request content capture req.ssl_sni len 64
    log-format "%ci:%cp [%t] %ft %b/%s %ST %B req_ssl_sni:%[ssl_fc_sni]"
    # ACL для определения SNI
    acl sni_openai req.ssl_sni -i api.openai.com
    acl sni_github req.ssl_sni -i api.github.com
    acl sni_googleapis req.ssl_sni -i generativelanguage.googleapis.com
    acl sni_groq req.ssl_sni -i api.groq.com
    acl sni_discordnet req.ssl_sni -i media.discordapp.net
    acl sni_discordcom req.ssl_sni -i cdn.discordapp.com

    # Маршрутизация на основе SNI
    use_backend openai_backend if sni_openai
    use_backend github_backend if sni_github
    use_backend googleapis_backend if sni_googleapis
    use_backend groq_backend if sni_groq
    use_backend discordnet_backend if sni_discordnet
    use_backend discordcom_backend if sni_discordcom

# Отклонение запросов, если SNI не распознан
    default_backend block_backend

backend openai_backend
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    server openai api.openai.com:443 check

backend github_backend
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    server github api.github.com:443 check

backend googleapis_backend
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    server googleapis generativelanguage.googleapis.com:443 check

backend groq_backend
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    server groq api.groq.com:443 check

backend discordnet_backend
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    server discordnet media.discordapp.net:443 check

backend discordcom_backend
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    server discordcom cdn.discordapp.com:443 check

backend block_backend
    mode tcp
    balance roundrobin
    option tcp-check
    # Фиктивный сервер для блокировки запросов
    server block 127.0.0.1:4444

listen stats
    bind *:8404
    mode http
    log global

    # URL для доступа к странице статистики
    stats uri /balancerstats

 # Включаем авторизацию для доступа к статистике
    stats auth adminer:superstatA0!

    # Включаем автоматическое обновление страницы статистики каждые 10 секунд
    stats refresh 10s

    # Включаем статистику и управление бэкендами и серверами
    stats enable
    #stats hide-version       # Скрывает версию HAProxy на странице статистики
    stats show-node          # Показывает имя узла (имя сервера) на странице статистики


stats admin if TRUE


